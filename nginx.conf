server {
  listen 443 http2 default_server;
  listen [::]:443 http2 default_server;
  listen 80 http2 default_server;
  listen [::]:80 http2 default_server;
  root /var/www/cultstate.com;
  index index.html;
  server_name cultstate.com www.cultstate.com;

  server_tokens off;

  client_body_buffer_size  1K;
  client_header_buffer_size 1k;
  client_max_body_size 1k;
  large_client_header_buffers 2 1k;

  client_body_timeout   10;
  client_header_timeout 10;
  send_timeout          10;

  # Headers

  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  charset utf-8;

  proxy_hide_header X-Powered-By;

  # Request

  if ($host !~ ^(cultstate.com|www.cultstate.com)$ ) {
          return 444;
  }

  if ($request_method !~ ^(GET|POST)$ ) {
          return 405;
  }

  # Referrals

  if ($http_referer ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen) ) {
          return 404;
  }

  sendfile on;
  sendfile_max_chunk 1m;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  gzip on;
  gzip_static on;
  gzip_types application/javascript image/* text/css application/xml application/json text/xml application/xhtml+xml application/rss+xml text/plain;

#  ssl on;
#  ssl_certificate /etc/letsencrypt/live/cultstate.com/fullchain.pem;
#  ssl_certificate_key /etc/letsencrypt/live/cultstate.com/privkey.pem;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~* \.(jpg|jpeg|gif|png|ico|cur|gz|svg|mp4|ogg|ogv|webm|htc)$ {
    access_log off;
    add_header Cache-Control "max-age=2592000";
    expires 30d;
  }

  location ~* \.(css|js)$ {
    access_log off;
    add_header Cache-Control "max-age=31536000";
    expires 365d;
  }
}

#server {
#  listen 0.0.0.0:80;
#  server_name cultstate.com www.cultstate.com;
#  rewrite ^ https://$host$request_uri? permanent;
#}

# Limit

limit_conn_zone $binary_remote_addr zone=addr:5m;
limit_conn addr 1;

# User Agents

include /etc/nginx/blockuseragents.rules;
